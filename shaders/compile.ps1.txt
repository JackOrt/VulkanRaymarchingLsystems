# Define shader stage mappings based on filename keywords
$shaderStages = @{
    "vert" = "vertex"
    "frag" = "fragment"
    "geom" = "geometry"
    "tesc" = "tesscontrol"
    "tese" = "tesseval"
    "comp" = "compute"
    "mesh" = "mesh"
    "task" = "task"
    "rgen" = "rgen"
    "rint" = "rint"
    "rahit" = "rahit"
    "rchit" = "rchit"
    "rmiss" = "rmiss"
    "rcall" = "rcall"
}

# Get all .glsl files in the current directory
$shaders = Get-ChildItem -Path . -Filter "*.glsl"

foreach ($shader in $shaders) {
    $fileName = $shader.Name
    $outputFile = "$($shader.BaseName).spv"

    # Determine shader stage based on filename suffix
    $stage = $null
    foreach ($key in $shaderStages.Keys) {
        if ($fileName -match "_$key\.glsl$") {
            $stage = $shaderStages[$key]
            break
        }
    }

    if ($stage) {
        # Compile the shader
        Write-Host "Compiling $fileName as $stage shader..."
        glslc -fshader-stage=$stage $fileName -o $outputFile
    } else {
        Write-Host "Skipping $fileName: Unknown shader stage."
    }
}
